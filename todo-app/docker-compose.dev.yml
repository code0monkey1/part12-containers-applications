services:
  app:
    image: todo-frontend-image
    build:
      context:  ./todo-frontend
      dockerfile: Dockerfile
    volumes:
      - ./todo-frontend:/app
    ports:
      - 3000:3000
    container_name: todo-frontend-container
    environment:
      - REACT_APP_BACKEND_URL=http://api:3000
    depends_on:
    - api
  debug-helper:
    image: busybox
  
  
  api:
      image:
        app_backend_image
      build:
        context: ./todo-backend
        dockerfile: dev.Dockerfile
      volumes:
        - ./todo-backend:/app
      environment:
          REDIS_URL: redis://redis:6379
          MONGO_URL: mongodb://the_username:the_password@mongo:27017/the_database
      ports:
        - 3001:3000
      container_name: todo-backend-dev-container
      depends_on:
        - redis
        - mongo

  mongo:
      image: mongo
      environment:
        MONGO_INITDB_ROOT_USERNAME: the_username
        MONGO_INITDB_ROOT_PASSWORD: the_password
        MONGO_INITDB_DATABASE: the_database
      ports:
        - 27017:27017
      volumes: 
        - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js

  redis:
        image: redis
        command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
        ports:
        - 6379:6379
        volumes: # Declare the volume
            - ./todo-backend/redis_data:/data

    
  nginx:
    image: nginx:1.20.1
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 8080:80
    container_name: reverse-proxy
    depends_on:
      - app # wait for the frontend container to be started